{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { StoreContext, StoreProvider } from \"./store.context\";\nimport { LocalStorageContext, LocalStorageProvider } from \"./local-storage.context\";\nimport { SessionStorageContext, SessionStorageProvider } from \"./session-storage.context\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst OverallProvider = props => {\n  const {\n    children\n  } = props;\n  return ___EmotionJSX(StoreProvider, null, ___EmotionJSX(LocalStorageProvider, null, ___EmotionJSX(SessionStorageProvider, null, children)));\n};\n\nexport { OverallProvider, StoreContext, LocalStorageContext, SessionStorageContext };","map":{"version":3,"sources":["/Users/enayetullahrasuli/Documents/bbv/books/js-node-js/nextjs-typescript-eng-its/src/main/context/index.tsx"],"names":["React","StoreContext","StoreProvider","LocalStorageContext","LocalStorageProvider","SessionStorageContext","SessionStorageProvider","OverallProvider","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,iBAA5C;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,yBAA1D;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,QAA8D,2BAA9D;;;AAIA,MAAMC,eAAiC,GAAIC,KAAD,IAAW;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AAEA,SACE,cAAC,aAAD,QACE,cAAC,oBAAD,QACE,cAAC,sBAAD,QAAyBC,QAAzB,CADF,CADF,CADF;AAOD,CAVD;;AAYA,SAASF,eAAT,EAA0BN,YAA1B,EAAwCE,mBAAxC,EAA6DE,qBAA7D","sourcesContent":["import React from \"react\";\n\nimport { StoreContext, StoreProvider } from \"./store.context\";\nimport { LocalStorageContext, LocalStorageProvider } from \"./local-storage.context\";\nimport { SessionStorageContext, SessionStorageProvider } from \"./session-storage.context\";\n\ninterface IProps {}\n\nconst OverallProvider: React.FC<IProps> = (props) => {\n  const { children } = props;\n\n  return (\n    <StoreProvider>\n      <LocalStorageProvider>\n        <SessionStorageProvider>{children}</SessionStorageProvider>\n      </LocalStorageProvider>\n    </StoreProvider>\n  );\n};\n\nexport { OverallProvider, StoreContext, LocalStorageContext, SessionStorageContext };\n"]},"metadata":{},"sourceType":"module"}