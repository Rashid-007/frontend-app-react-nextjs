{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar LocalStorageWrapper = /*#__PURE__*/function () {\n  function LocalStorageWrapper() {\n    _classCallCheck(this, LocalStorageWrapper);\n  }\n\n  _createClass(LocalStorageWrapper, [{\n    key: \"getItem\",\n    value: function getItem(key) {\n      return localStorage.getItem(key);\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      return localStorage.setItem(key, value);\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(key) {\n      return localStorage.removeItem(key);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      return localStorage.clear();\n    }\n  }, {\n    key: \"key\",\n    value: function key(index) {\n      return localStorage.key(index);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return localStorage.length;\n    }\n  }]);\n\n  return LocalStorageWrapper;\n}();\n\nexport { LocalStorageWrapper };","map":{"version":3,"sources":["/Users/enayetullahrasuli/Documents/code/nextjs-typescript-react-app/src/main/utils/storage/local-storage-wrapper.class.tsx"],"names":["LocalStorageWrapper","key","localStorage","getItem","value","setItem","removeItem","clear","index","length"],"mappings":";;;IAAMA,mB;;;;;;;4BACaC,G,EAAqB;AAClC,aAAOC,YAAY,CAACC,OAAb,CAAqBF,GAArB,CAAP;AACD;;;4BACcA,G,EAAaG,K,EAAqB;AAC/C,aAAOF,YAAY,CAACG,OAAb,CAAqBJ,GAArB,EAA0BG,KAA1B,CAAP;AACD;;;+BAEiBH,G,EAAmB;AACnC,aAAOC,YAAY,CAACI,UAAb,CAAwBL,GAAxB,CAAP;AACD;;;4BAEoB;AACnB,aAAOC,YAAY,CAACK,KAAb,EAAP;AACD;;;wBAEUC,K,EAAuB;AAChC,aAAON,YAAY,CAACD,GAAb,CAAiBO,KAAjB,CAAP;AACD;;;wBAEY;AACX,aAAON,YAAY,CAACO,MAApB;AACD;;;;;;AAGH,SAAST,mBAAT","sourcesContent":["class LocalStorageWrapper {\n    public getItem(key: string): string {\n      return localStorage.getItem(key);\n    }\n    public setItem(key: string, value: string): void {\n      return localStorage.setItem(key, value);\n    }\n  \n    public removeItem(key: string): void {\n      return localStorage.removeItem(key);\n    }\n  \n    public clear(): void {\n      return localStorage.clear();\n    }\n  \n    public key(index: number): string {\n      return localStorage.key(index);\n    }\n  \n    get length() {\n      return localStorage.length;\n    }\n  }\n  \n  export { LocalStorageWrapper };\n  "]},"metadata":{},"sourceType":"module"}