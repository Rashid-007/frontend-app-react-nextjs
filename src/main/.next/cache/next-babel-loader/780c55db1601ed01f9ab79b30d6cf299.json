{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar SessionStorageWrapper = /*#__PURE__*/function () {\n  function SessionStorageWrapper() {\n    _classCallCheck(this, SessionStorageWrapper);\n  }\n\n  _createClass(SessionStorageWrapper, [{\n    key: \"getItem\",\n    value: function getItem(key) {\n      return sessionStorage.getItem(key);\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      return sessionStorage.setItem(key, value);\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(key) {\n      return sessionStorage.removeItem(key);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      return sessionStorage.clear();\n    }\n  }, {\n    key: \"key\",\n    value: function key(index) {\n      return sessionStorage.key(index);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return sessionStorage.length;\n    }\n  }]);\n\n  return SessionStorageWrapper;\n}();\n\nexport { SessionStorageWrapper };","map":{"version":3,"sources":["/Users/enayetullahrasuli/Documents/code/nextjs-typescript-react-app/src/main/utils/storage/session-storage-wrapper.class.tsx"],"names":["SessionStorageWrapper","key","sessionStorage","getItem","value","setItem","removeItem","clear","index","length"],"mappings":";;;IAAMA,qB;;;;;;;4BACaC,G,EAAqB;AAClC,aAAOC,cAAc,CAACC,OAAf,CAAuBF,GAAvB,CAAP;AACD;;;4BACcA,G,EAAaG,K,EAAqB;AAC/C,aAAOF,cAAc,CAACG,OAAf,CAAuBJ,GAAvB,EAA4BG,KAA5B,CAAP;AACD;;;+BAEiBH,G,EAAmB;AACnC,aAAOC,cAAc,CAACI,UAAf,CAA0BL,GAA1B,CAAP;AACD;;;4BAEoB;AACnB,aAAOC,cAAc,CAACK,KAAf,EAAP;AACD;;;wBAEUC,K,EAAuB;AAChC,aAAON,cAAc,CAACD,GAAf,CAAmBO,KAAnB,CAAP;AACD;;;wBAEY;AACX,aAAON,cAAc,CAACO,MAAtB;AACD;;;;;;AAGH,SAAST,qBAAT","sourcesContent":["class SessionStorageWrapper {\n    public getItem(key: string): string {\n      return sessionStorage.getItem(key);\n    }\n    public setItem(key: string, value: string): void {\n      return sessionStorage.setItem(key, value);\n    }\n  \n    public removeItem(key: string): void {\n      return sessionStorage.removeItem(key);\n    }\n  \n    public clear(): void {\n      return sessionStorage.clear();\n    }\n  \n    public key(index: number): string {\n      return sessionStorage.key(index);\n    }\n  \n    get length() {\n      return sessionStorage.length;\n    }\n  }\n  \n  export { SessionStorageWrapper };\n  "]},"metadata":{},"sourceType":"module"}