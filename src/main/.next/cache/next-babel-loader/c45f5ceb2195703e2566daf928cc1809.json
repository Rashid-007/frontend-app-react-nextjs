{"ast":null,"code":"import NextI18Next from \"next-i18next\";\nimport { initReactI18next } from \"react-i18next\";\nvar languages = [\"en-US\", \"nl-NL\"]; // first language is default language\n\nvar defaultNS = \"common\";\nvar localeSubpaths = {\n  \"en-US\": \"en\",\n  \"nl-NL\": \"nl\"\n};\nvar nextI18next = new NextI18Next({\n  strictMode: true,\n  debug: false,\n  serverLanguageDetection: true,\n  browserLanguageDetection: true,\n  detection: {\n    lookupCookie: \"language\",\n    order: [\"path\", \"cookie\", \"header\"],\n    caches: [\"cookie\"]\n  },\n  defaultNS: defaultNS,\n  defaultLanguage: languages[0],\n  otherLanguages: languages.filter(function (lang, index) {\n    return index > 0;\n  }),\n  localeSubpaths: localeSubpaths,\n  localePath: \"./src/main/static/locale\",\n  localeStructure: \"{{lng}}/{{ns}}\",\n  ignoreRoutes: [\"/_next/\", \"/static/\"],\n  use: [initReactI18next] // we pass the i18n instance to react-i18next which will make it available for all the components via the context api.\n\n});\nnextI18next.i18n.languages = languages;\n/**\n * Overwrite typings of withTranslation, because `P extends WithTranslation` have to\n * be `P extends Partial<WithTranslation>`. If it is not `Partial<WithTranslation>`, the `Component.getInitialProps()` return type is all props of the component plus `WithTranslation`\n * values, but the values of `WithTranslation` are not passed to `Component.getInitialProps()`.\n *\n * This might be fixed in a next-i18next version > 1.2.1\n */\n\nexport var withTranslation = nextI18next.withTranslation;\n\nvar mapLanguageToLocaleSubpaths = function mapLanguageToLocaleSubpaths(language) {\n  return localeSubpaths[language] || localeSubpaths[languages[0]];\n};\n\nexport default nextI18next;\nvar appWithTranslation = nextI18next.appWithTranslation,\n    Link = nextI18next.Link,\n    Router = nextI18next.Router;\nexport { appWithTranslation, Link, Router };\nexport { languages, defaultNS, mapLanguageToLocaleSubpaths };","map":{"version":3,"sources":["/Users/enayetullahrasuli/Documents/bbv/books/js-node-js/nextjs-typescript-eng-its/src/main/i18n/i18n.ts"],"names":["NextI18Next","initReactI18next","languages","defaultNS","localeSubpaths","nextI18next","strictMode","debug","serverLanguageDetection","browserLanguageDetection","detection","lookupCookie","order","caches","defaultLanguage","otherLanguages","filter","lang","index","localePath","localeStructure","ignoreRoutes","use","i18n","withTranslation","mapLanguageToLocaleSubpaths","language","appWithTranslation","Link","Router"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAAqCC,gBAArC,QAA6D,eAA7D;AAEA,IAAMC,SAAS,GAAG,CAAC,OAAD,EAAU,OAAV,CAAlB,C,CAAsC;;AACtC,IAAMC,SAAS,GAAG,QAAlB;AAEA,IAAMC,cAAc,GAAG;AACrB,WAAS,IADY;AAErB,WAAS;AAFY,CAAvB;AAMA,IAAMC,WAAW,GAAG,IAAIL,WAAJ,CAAiB;AACjCM,EAAAA,UAAU,EAAE,IADqB;AAEjCC,EAAAA,KAAK,EAAE,KAF0B;AAIjCC,EAAAA,uBAAuB,EAAE,IAJQ;AAKjCC,EAAAA,wBAAwB,EAAE,IALO;AAOjCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YAAY,EAAE,UADP;AAEPC,IAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAFA;AAGPC,IAAAA,MAAM,EAAE,CAAC,QAAD;AAHD,GAPsB;AAY/BV,EAAAA,SAAS,EAATA,SAZ+B;AAa/BW,EAAAA,eAAe,EAAEZ,SAAS,CAAC,CAAD,CAbK;AAc/Ba,EAAAA,cAAc,EAAEb,SAAS,CAACc,MAAV,CAAiB,UAACC,IAAD,EAAOC,KAAP;AAAA,WAAiBA,KAAK,GAAG,CAAzB;AAAA,GAAjB,CAde;AAgB/Bd,EAAAA,cAAc,EAAdA,cAhB+B;AAkB/Be,EAAAA,UAAU,EAAE,0BAlBmB;AAmB/BC,EAAAA,eAAe,EAAE,gBAnBc;AAoB/BC,EAAAA,YAAY,EAAE,CAAC,SAAD,EAAY,UAAZ,CApBiB;AAsB/BC,EAAAA,GAAG,EAAE,CAACrB,gBAAD,CAtB0B,CAsBN;;AAtBM,CAAjB,CAApB;AAyBAI,WAAW,CAACkB,IAAZ,CAAiBrB,SAAjB,GAA6BA,SAA7B;AAEA;;;;;;;;AASA,OAAO,IAAMsB,eAAe,GAAGnB,WAAW,CAACmB,eAApC;;AASL,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,QAAD,EAA8B;AAChE,SAAOtB,cAAc,CAACsB,QAAD,CAAd,IAA4BtB,cAAc,CAACF,SAAS,CAAC,CAAD,CAAV,CAAjD;AACD,CAFD;;AAKA,eAAeG,WAAf;IACesB,kB,GAAqCtB,W,CAArCsB,kB;IAAoBC,I,GAAiBvB,W,CAAjBuB,I;IAAMC,M,GAAWxB,W,CAAXwB,M;;AACzC,SAAS3B,SAAT,EAAoBC,SAApB,EAA+BsB,2BAA/B","sourcesContent":["import NextI18Next from \"next-i18next\";\nimport { Namespace, WithTranslation, initReactI18next } from \"react-i18next\";\n\nconst languages = [\"en-US\", \"nl-NL\"]; // first language is default language\nconst defaultNS = \"common\";\n\nconst localeSubpaths = {\n  \"en-US\": \"en\",\n  \"nl-NL\": \"nl\",\n}\n\n\nconst nextI18next = new NextI18Next ({\n    strictMode: true,\n    debug: false,\n\n    serverLanguageDetection: true,\n    browserLanguageDetection: true,\n    \n    detection: {\n        lookupCookie: \"language\",\n        order: [\"path\", \"cookie\", \"header\"],\n        caches: [\"cookie\"],\n      },\n      defaultNS,\n      defaultLanguage: languages[0],\n      otherLanguages: languages.filter((lang, index) => index > 0),\n\n      localeSubpaths,\n\n      localePath: \"./src/main/static/locale\",\n      localeStructure: \"{{lng}}/{{ns}}\",\n      ignoreRoutes: [\"/_next/\", \"/static/\"],\n      \n      use: [initReactI18next], // we pass the i18n instance to react-i18next which will make it available for all the components via the context api.\n});\n\nnextI18next.i18n.languages = languages;\n\n/**\n * Overwrite typings of withTranslation, because `P extends WithTranslation` have to\n * be `P extends Partial<WithTranslation>`. If it is not `Partial<WithTranslation>`, the `Component.getInitialProps()` return type is all props of the component plus `WithTranslation`\n * values, but the values of `WithTranslation` are not passed to `Component.getInitialProps()`.\n *\n * This might be fixed in a next-i18next version > 1.2.1\n */\n\n\nexport const withTranslation = nextI18next.withTranslation as (\n    ns?: Namespace,\n    options?: {\n      withRef?: boolean;\n    }\n  ) => <P extends Partial<WithTranslation>>(\n    component: React.ComponentType<P>\n  ) => React.ComponentType<Omit<P, keyof WithTranslation>>;\n\n  const mapLanguageToLocaleSubpaths = (language: string): string => {\n    return localeSubpaths[language] || localeSubpaths[languages[0]];\n  };\n  \n  \n  export default nextI18next;\n  export const { appWithTranslation, Link, Router } = nextI18next;\n  export { languages, defaultNS, mapLanguageToLocaleSubpaths }\n  \n"]},"metadata":{},"sourceType":"module"}